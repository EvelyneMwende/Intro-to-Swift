<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation
//A Class is a reference type and a Struct is a value type
class Car{
    let make:String
    let color:String
    //init is a special func that helps you initialize variables
    init(color:String, make:String){
        //self.color is the color up there assigned to the color in the init block
        self.color = color
        self.make = make
        
    }

}
//instance of car-&gt;instance is an occurrence of an object
var bmw: Car = Car(color: "blue", make: "BMW")
var car2 = Car(color: "green", make: "Honda")
//When Car is a class the statement below means that car3 points to bmw if anything in bmw changes the car3 variable would change
//car3 points to bmw and when bmw changes it also changes
//However when Car is a struct car3 will be a copy of bmw and the 2 are completely different
var car3=bmw

//BMW is a subclass of a car
//class BMW:Car{
//}
</string>
			<key>ModifiedRange</key>
			<string>{0, 880}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
